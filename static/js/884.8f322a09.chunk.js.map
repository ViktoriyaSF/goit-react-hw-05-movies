{"version":3,"file":"static/js/884.8f322a09.chunk.js","mappings":"iOAiEA,UA7DqB,WAAO,IAAD,IACzB,GAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAqBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAElDC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACKC,EAAAA,EAAAA,IAAgBN,GADrB,OACXO,EADW,OAEjBd,EAAgBc,GAFC,2CAAH,qDAIhBF,GACD,GAAE,CAACL,KAGF,iCACE,SAAC,KAAD,CAAMQ,GAAIZ,EAAmBa,QAA7B,oBACyB,IAAxBjB,EAAakB,QACZ,sDAEA,2BACGlB,EAAamB,aACZ,gBACEC,IAAG,yCAAoCpB,EAAamB,aACpDE,IAAKrB,EAAasB,SAGpB,gBACEF,IAAG,oDACHC,IAAKrB,EAAasB,SAGtB,4BACE,wBAAKtB,EAAasB,OAAStB,EAAauB,QACxC,wCAAgBC,KAAKC,MAAkC,GAA5BzB,EAAa0B,cAAxC,QACA,sCACA,uBAAI1B,EAAa2B,YACjB,oCACA,uBAAI3B,EAAa4B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMP,IAAV,IAAgBQ,KAAK,gBAK5D,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAT,6BAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,yCAGJ,SAAC,EAAAgB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+IC7DDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBF,GADjB,SAEFD,EAAAA,EAAAA,IAAUG,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBE,EAAiB,mCAAG,WAAMC,GAAN,kFACzBJ,EADyB,6BACWI,EADX,oBAC4BN,GAD5B,SAEAD,EAAAA,EAAAA,IAAUG,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,sDAKjBxB,EAAe,mCAAG,WAAMN,GAAN,kFACvB6B,EADuB,gBACA7B,EADA,qBACoB2B,EADpB,4BAECD,EAAAA,EAAAA,IAAUG,GAFX,uBAEfK,EAFe,EAErBH,KAFqB,kBAGtBG,GAHsB,2CAAH,qD","sources":["pages/MovieDetails.jsx","service/api-movies.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'service/api-movies';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  const location = useLocation();\n  const backLinLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      const results = await getMovieDetails(movieId);\n      setMovieDetails(results);\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinLocationRef.current}>Go bac</Link>\n      {movieDetails.length === 0 ? (\n        <div>This movie is not found</div>\n      ) : (\n        <div>\n          {movieDetails.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            ></img>\n          ) : (\n            <img\n              src={`https://via.placeholder.com/300x400?text=No+Image`}\n              alt={movieDetails.title}\n            ></img>\n          )}\n          <div>\n            <h2>{movieDetails.title || movieDetails.name}</h2>\n            <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            <p>{movieDetails.genres.map(genre => genre.name).join(' / ')}</p>\n          </div>\n        </div>\n      )}\n\n      <ul>\n        <li>\n          <Link to=\"cast\"> cast âœ¨</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\"> reviews ðŸ’–</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","backLinLocationRef","useRef","state","from","movieId","useParams","console","log","useEffect","getDetails","getMovieDetails","results","to","current","length","poster_path","src","alt","title","name","Math","round","vote_average","overview","genres","map","genre","join","Suspense","fallback","axios","KEY","fetchTrendingMovies","queryString","movies","data","fetchSearchMovies","query","movie"],"sourceRoot":""}
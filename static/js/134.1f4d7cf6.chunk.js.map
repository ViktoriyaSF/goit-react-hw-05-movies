{"version":3,"file":"static/js/134.1f4d7cf6.chunk.js","mappings":"iOAiDA,UA7Ce,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAGjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,GAAgB,KAAZF,GAA8B,OAAZA,EAAtB,CACA,IAAMG,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,IAAkBJ,GAD5B,gBACRK,EADQ,EACRA,QACRC,QAAQC,IAAIF,GACZX,EAAUW,GAHM,2CAAH,qDAMfF,GAP8C,CAQ/C,GAAE,CAACH,IAWJ,OACE,4BACE,kBAAOQ,KAAK,OAAOC,MAAOT,EAASU,SAXb,SAAAC,GACxB,IAAMC,EAAmBD,EAAIE,OAAOJ,MACpC,GAAyB,KAArBG,EACF,OAAOb,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,QAASY,GAC5B,IAMInB,EAAOqB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMxB,GAAxC,SACGoB,EAAMK,OAASL,EAAMM,QAFjBN,EAAME,GAMlB,MAGN,C,+IC9CDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBF,GADjB,SAEFD,EAAAA,EAAAA,IAAUG,GAFR,uBAEnBhC,EAFmB,EAEzBiC,KAFyB,kBAG1BjC,GAH0B,2CAAH,qDAMnBW,EAAiB,mCAAG,WAAMuB,GAAN,kFACzBF,EADyB,6BACWE,EADX,oBAC4BJ,GAD5B,SAEAD,EAAAA,EAAAA,IAAUG,GAFV,uBAEjBhC,EAFiB,EAEvBiC,KAFuB,kBAGxBjC,GAHwB,2CAAH,sDAKjBmC,EAAe,mCAAG,WAAM5B,GAAN,kFACvByB,EADuB,gBACAzB,EADA,qBACoBuB,EADpB,4BAECD,EAAAA,EAAAA,IAAUG,GAFX,uBAEfV,EAFe,EAErBW,KAFqB,kBAGtBX,GAHsB,2CAAH,qD","sources":["pages/Movies.jsx","service/api-movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'service/api-movies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  // console.log(location);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  //або значення або пустий рядок\n  const movieId = searchParams.get('movieId') ?? '';\n\n  useEffect(() => {\n    if (movieId === '' || movieId === null) return;\n    const getMovies = async () => {\n      const { results } = await fetchSearchMovies(movieId);\n      console.log(results);\n      setMovies(results);\n    };\n\n    getMovies();\n  }, [movieId]);\n\n  const updateQueryString = evt => {\n    const movieSearchValue = evt.target.value;\n    if (movieSearchValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: movieSearchValue });\n  };\n  // console.log(movieId);\n\n  return (\n    <div>\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n"],"names":["useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","useEffect","getMovies","fetchSearchMovies","results","console","log","type","value","onChange","evt","movieSearchValue","target","map","movie","to","id","state","from","title","name","axios","KEY","fetchTrendingMovies","queryString","data","query","getMovieDetails"],"sourceRoot":""}
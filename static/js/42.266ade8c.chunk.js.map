{"version":3,"file":"static/js/42.266ade8c.chunk.js","mappings":"sRAEaA,EAAmBC,EAAAA,GAAAA,IAAH,0HAQhBC,EAAQD,EAAAA,GAAAA,GAAH,gDAGLE,EAAQF,EAAAA,GAAAA,GAAH,gDAGLG,EAAOH,EAAAA,GAAAA,EAAH,gD,SCsBjB,EAjCgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uGACSC,EAAAA,EAAAA,IAAkBJ,GAD3B,gBACTK,EADS,EACTA,QACRN,EAAWM,GAFM,2CAAH,qDAIhBF,GACD,GAAE,CAACH,KAIF,UAACR,EAAD,WACsB,IAAnBM,EAAQQ,SAAgB,SAACZ,EAAD,UAAO,YACZ,IAAnBI,EAAQQ,QACP,wBAAI,kDAEJ,wBACGR,EAAQS,KAAI,SAAAC,GACX,OACE,2BACE,UAACb,EAAD,WAAO,WAASa,EAAOC,WACvB,SAACb,EAAD,UAAOY,EAAOE,YAFPF,EAAOG,GAKnB,QAKV,C,0NCnCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCC,EAAU,8BAEVC,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBH,GADjB,SAEFD,EAAAA,EAAAA,IAAUI,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBE,EAAiB,mCAAG,WAAMC,GAAN,kFACzBJ,EADyB,6BACWI,EADX,oBAC4BP,GAD5B,SAEAD,EAAAA,EAAAA,IAAUI,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,sDAKjBI,EAAiB,mCAAG,WAAMrB,GAAN,kFACzBgB,EADyB,gBACFhB,EADE,qBACkBa,EADlB,4BAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEjBM,EAFiB,EAEvBJ,KAFuB,kBAGxBI,GAHwB,2CAAH,sDAKjBC,EAAc,mCAAG,WAAMvB,GAAN,kFACtBgB,EADsB,gBACChB,EADD,4BAC4Ba,EAD5B,4BAELD,EAAAA,EAAAA,IAAUI,GAFL,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdd,EAAiB,mCAAG,WAAMJ,GAAN,kFACzBgB,EADyB,gBACFhB,EADE,4BACyBa,EADzB,4BAERD,EAAAA,EAAAA,IAAUI,GAFF,uBAEvBE,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Reviews/StyledReviews.jsx","components/Reviews/Reviews.jsx","service/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  margin-right: 10px;\n  margin-left: 10px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const Items = styled.h4`\n  margin-bottom: 15px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'service/api-movies';\nimport { ReviewsContainer, Title, Items, Text } from './StyledReviews';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const { results } = await fetchMovieReviews(movieId);\n      setReviews(results);\n    };\n    getReviews();\n  }, [movieId]);\n  // console.log(reviews);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length !== 0 && <Title>Reviews</Title>}\n      {reviews.length === 0 ? (\n        <h2>We don't have any reviews for this movie yet</h2>\n      ) : (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <Items>Author: {review.author}</Items>\n                <Text>{review.content}</Text>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </ReviewsContainer>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\nexport const IMG_url = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const fetchMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const fetchMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["ReviewsContainer","styled","Title","Items","Text","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","fetchMovieReviews","results","length","map","review","author","content","id","axios","KEY","IMG_url","fetchTrendingMovies","queryString","movies","data","fetchSearchMovies","query","fetchMovieDetails","movie","fetchMovieCast"],"sourceRoot":""}
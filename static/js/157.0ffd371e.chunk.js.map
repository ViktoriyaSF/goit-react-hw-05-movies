{"version":3,"file":"static/js/157.0ffd371e.chunk.js","mappings":"uMAGaA,EAAS,WACpB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,+JCfYC,EAAgBC,EAAAA,GAAAA,QAAH,uEAKbC,EAAeD,EAAAA,GAAAA,GAAH,6GAOZE,EAAOF,EAAAA,GAAAA,GAAH,yCAIJG,EAAWH,EAAAA,GAAAA,GAAH,0IAURI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8P,SCDvB,EAlBkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACnB,OACE,UAACP,EAAD,YACE,SAACE,EAAD,UAAc,oBAEd,SAACC,EAAD,UACGI,EAAOC,KAAI,SAAAC,GAAK,OACf,SAACL,EAAD,WACE,SAACC,EAAD,CAAYK,GAAE,kBAAaD,EAAME,IAAjC,SACGF,EAAMG,OAASH,EAAMI,QAFXJ,EAAME,GADN,QAUxB,E,mBCWD,EA/Ba,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAa,GACbE,GAAS,GAFO,UAGUG,EAAAA,EAAAA,MAHV,gBAGRC,EAHQ,EAGRA,QAERR,EAAUQ,GACVN,GAAa,GANG,2CAAH,qDASfI,GACD,GAAE,KAGD,gCACGH,IACC,wBAAI,0EAILF,IAAa,SAACzB,EAAA,EAAD,IACbgB,IAAU,SAAC,EAAD,CAAWA,OAAQA,MAGnC,C,0NClCDiB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCC,EAAU,8BAEVJ,EAAmB,mCAAG,+FAC3BK,EAD2B,qCACiBF,GADjB,SAEFD,EAAAA,EAAAA,IAAUG,GAFR,uBAEnBpB,EAFmB,EAEzBqB,KAFyB,kBAG1BrB,GAH0B,2CAAH,qDAMnBsB,EAAiB,mCAAG,WAAMC,GAAN,kFACzBH,EADyB,6BACWG,EADX,oBAC4BL,GAD5B,SAEAD,EAAAA,EAAAA,IAAUG,GAFV,uBAEjBpB,EAFiB,EAEvBqB,KAFuB,kBAGxBrB,GAHwB,2CAAH,sDAKjBwB,EAAiB,mCAAG,WAAMC,GAAN,kFACzBL,EADyB,gBACFK,EADE,qBACkBP,EADlB,4BAEDD,EAAAA,EAAAA,IAAUG,GAFT,uBAEjBlB,EAFiB,EAEvBmB,KAFuB,kBAGxBnB,GAHwB,2CAAH,sDAKjBwB,EAAc,mCAAG,WAAMD,GAAN,kFACtBL,EADsB,gBACCK,EADD,4BAC4BP,EAD5B,4BAELD,EAAAA,EAAAA,IAAUG,GAFL,uBAEpBC,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdM,EAAiB,mCAAG,WAAMF,GAAN,kFACzBL,EADyB,gBACFK,EADE,4BACyBP,EADzB,4BAERD,EAAAA,EAAAA,IAAUG,GAFF,uBAEvBC,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/MovieList/StyledMovieList.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","service/api-movies.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './StyledLoader';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin: 20px;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:hover,\n  &:focus {\n    transform: scale(1.025);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    color: #1c0672;\n    border-bottom: 2px solid #1c0672;\n    transform: scale(1.025);\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './StyledMovieList';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n\n      <List>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'service/api-movies';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  // const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      setError(false);\n      const { results } = await fetchTrendingMovies();\n      // console.log(results);\n      setMovies(results);\n      setIsLoading(false);\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      {error && (\n        <h2>\n          Sorry, we could not fetch the trending movies. Please try again later\n        </h2>\n      )}\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\nexport default Home;\n\n// useEffect(() => {\n//   const getMovies = async () => {\n//     try {\n//       setIsLoading(true);\n//       setError(false);\n//       const { results } = await fetchTrendingMovies();\n//       // console.log(results);\n//       setMovies(results);\n//     } catch (error) {\n//       setError('sorry');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   getMovies();\n// }, []);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\nexport const IMG_url = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const fetchMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const fetchMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","movies","map","movie","to","id","title","name","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getMovies","fetchTrendingMovies","results","axios","KEY","IMG_url","queryString","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}
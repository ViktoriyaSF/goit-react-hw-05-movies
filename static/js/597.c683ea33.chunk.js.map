{"version":3,"file":"static/js/597.c683ea33.chunk.js","mappings":"kOAoDA,UA9Ca,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACYC,EAAAA,EAAAA,IAAaJ,GADzB,gBACNK,EADM,EACNA,QACRC,QAAQC,IAAIF,GACZN,EAAaM,GAHC,2CAAH,qDAMbF,GACD,GAAE,CAACH,IACJM,QAAQC,IAAIT,IAGV,iCACE,mCAAWE,KACW,IAArBF,EAAUU,QACT,sDAEA,wBACGV,EAAUW,KAAI,SAAAC,GACb,OACE,2BACE,gBACEC,IACED,EAAKE,aACDC,EAAAA,GAAU,OAASH,EAAKE,aACxBE,EAENC,MAAM,MACNC,OAAO,MACPC,IAAKP,EAAKQ,QAEZ,6BAAKR,EAAKQ,SACV,uCAAeR,EAAKS,eAZbT,EAAKU,QAejB,QAKV,C,+LChDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCT,EAAU,8BAEVU,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBF,GADjB,SAEFD,EAAAA,EAAAA,IAAUG,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBE,EAAiB,mCAAG,WAAMC,GAAN,kFACzBJ,EADyB,6BACWI,EADX,oBAC4BN,GAD5B,SAEAD,EAAAA,EAAAA,IAAUG,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,sDAKjBI,EAAe,mCAAG,WAAM7B,GAAN,kFACvBwB,EADuB,gBACAxB,EADA,qBACoBsB,EADpB,4BAECD,EAAAA,EAAAA,IAAUG,GAFX,uBAEfM,EAFe,EAErBJ,KAFqB,kBAGtBI,GAHsB,2CAAH,sDAKf1B,EAAY,mCAAG,WAAMJ,GAAN,kFACpBwB,EADoB,gBACGxB,EADH,6BAC+BsB,EAD/B,4BAEHD,EAAAA,EAAAA,IAAUG,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,qD","sources":["components/Cast.jsx","service/api-movies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getMovieCast, IMG_url } from 'service/api-movies';\nimport noFilm from '../img/noFilm.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { results } = await getMovieCast(movieId);\n      console.log(results);\n      setMovieCast(results);\n    };\n\n    getCast();\n  }, [movieId]);\n  console.log(movieCast);\n\n  return (\n    <>\n      <div>Cast {movieId}</div>\n      {movieCast.length === 0 ? (\n        <div>This movie is not found</div>\n      ) : (\n        <ul>\n          {movieCast.map(cast => {\n            return (\n              <li key={cast.cast_id}>\n                <img\n                  src={\n                    cast.profile_path\n                      ? IMG_url + '200w' + cast.profile_path\n                      : noFilm\n                  }\n                  width=\"200\"\n                  height=\"450\"\n                  alt={cast.name}\n                ></img>\n                <p> {cast.name}</p>\n                <p>Character: {cast.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\nexport const IMG_url = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits$?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews$?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["useState","movieCast","setMovieCast","movieId","useParams","useEffect","getCast","getMovieCast","results","console","log","length","map","cast","src","profile_path","IMG_url","noFilm","width","height","alt","name","character","cast_id","axios","KEY","fetchTrendingMovies","queryString","movies","data","fetchSearchMovies","query","getMovieDetails","movie"],"sourceRoot":""}
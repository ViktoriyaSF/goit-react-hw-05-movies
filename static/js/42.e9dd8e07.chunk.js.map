{"version":3,"file":"static/js/42.e9dd8e07.chunk.js","mappings":"sMAGaA,EAAS,WACpB,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,gLChBYC,EAAmBC,EAAAA,GAAAA,IAAH,0HAQhBC,EAAQD,EAAAA,GAAAA,GAAH,gDAGLE,EAAQF,EAAAA,GAAAA,GAAH,gDAGLG,EAAOH,EAAAA,GAAAA,EAAH,gD,SC0BjB,EApCgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6FACjBF,GAAa,GADI,UAESG,EAAAA,EAAAA,IAAkBN,GAF3B,gBAETO,EAFS,EAETA,QACRR,EAAWQ,GACXJ,GAAa,GAJI,2CAAH,qDAMhBE,GACD,GAAE,CAACL,IACJQ,QAAQC,KAAKX,IAGX,UAACN,EAAD,WACGU,IAAa,SAACnB,EAAA,EAAD,IACM,IAAnBe,EAAQY,SAAgB,SAAChB,EAAD,UAAO,YACZ,IAAnBI,EAAQY,SACP,wBACGZ,EAAQa,KAAI,SAAAC,GACX,OACE,2BACE,UAACjB,EAAD,WAAO,WAASiB,EAAOC,WACvB,SAACjB,EAAD,UAAOgB,EAAOE,YAFPF,EAAOG,GAKnB,OAGHjB,IAAW,wBAAI,mDAGtB,C,0NCvCDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCC,EAAU,8BAEVC,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBH,GADjB,SAEFD,EAAAA,EAAAA,IAAUI,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBE,EAAiB,mCAAG,WAAMC,GAAN,kFACzBJ,EADyB,6BACWI,EADX,oBAC4BP,GAD5B,SAEAD,EAAAA,EAAAA,IAAUI,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,sDAKjBI,EAAiB,mCAAG,WAAMzB,GAAN,kFACzBoB,EADyB,gBACFpB,EADE,qBACkBiB,EADlB,4BAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEjBM,EAFiB,EAEvBJ,KAFuB,kBAGxBI,GAHwB,2CAAH,sDAKjBC,EAAc,mCAAG,WAAM3B,GAAN,kFACtBoB,EADsB,gBACCpB,EADD,4BAC4BiB,EAD5B,4BAELD,EAAAA,EAAAA,IAAUI,GAFL,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdhB,EAAiB,mCAAG,WAAMN,GAAN,kFACzBoB,EADyB,gBACFpB,EADE,4BACyBiB,EADzB,4BAERD,EAAAA,EAAAA,IAAUI,GAFF,uBAEvBE,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/Reviews/StyledReviews.jsx","components/Reviews/Reviews.jsx","service/api-movies.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './StyledLoader';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  margin-right: 10px;\n  margin-left: 10px;\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const Items = styled.h4`\n  margin-bottom: 15px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovieReviews } from 'service/api-movies';\nimport { ReviewsContainer, Title, Items, Text } from './StyledReviews';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      setIsLoading(true);\n      const { results } = await fetchMovieReviews(movieId);\n      setReviews(results);\n      setIsLoading(false);\n    };\n    getReviews();\n  }, [movieId]);\n  console.log(!reviews);\n\n  return (\n    <ReviewsContainer>\n      {isLoading && <Loader />}\n      {reviews.length !== 0 && <Title>Reviews</Title>}\n      {reviews.length !== 0 && (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <Items>Author: {review.author}</Items>\n                <Text>{review.content}</Text>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!reviews && <h2>We don't have any reviews for this movie yet</h2>}\n    </ReviewsContainer>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\nexport const IMG_url = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const fetchMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const fetchMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ReviewsContainer","styled","Title","Items","Text","useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","useEffect","getReviews","fetchMovieReviews","results","console","log","length","map","review","author","content","id","axios","KEY","IMG_url","fetchTrendingMovies","queryString","movies","data","fetchSearchMovies","query","fetchMovieDetails","movie","fetchMovieCast"],"sourceRoot":""}
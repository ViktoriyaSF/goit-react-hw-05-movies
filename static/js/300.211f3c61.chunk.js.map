{"version":3,"file":"static/js/300.211f3c61.chunk.js","mappings":"+PAgEA,EA1Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACSC,EAAAA,EAAAA,IAAeJ,GADxB,gBACNF,EADM,EACNA,KACRC,EAAQD,GAFM,2CAAH,qDAIbK,GACD,GAAE,CAACH,KAkBF,iCACE,iCACiB,IAAhBF,EAAKO,QACJ,oDAEA,wBACGP,EAAKQ,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAAME,aACFC,EAAAA,GAAU,OAASH,EAAME,a,soKAG/BE,MAAM,MACNC,OAAO,MACPC,IAAKN,EAAMO,QAEb,6BAAKP,EAAMO,SACX,uCAAeP,EAAMQ,eAZdR,EAAMS,QAelB,QAKV,C,uNC5DDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCR,EAAU,8BAEVS,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACiBF,GADjB,SAEFD,EAAAA,EAAAA,IAAUG,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBE,EAAiB,mCAAG,WAAMC,GAAN,kFACzBJ,EADyB,6BACWI,EADX,oBAC4BN,GAD5B,SAEAD,EAAAA,EAAAA,IAAUG,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,sDAKjBI,EAAiB,mCAAG,WAAMzB,GAAN,kFACzBoB,EADyB,gBACFpB,EADE,qBACkBkB,EADlB,4BAEDD,EAAAA,EAAAA,IAAUG,GAFT,uBAEjBM,EAFiB,EAEvBJ,KAFuB,kBAGxBI,GAHwB,2CAAH,sDAKjBtB,EAAc,mCAAG,WAAMJ,GAAN,kFACtBoB,EADsB,gBACCpB,EADD,4BAC4BkB,EAD5B,4BAELD,EAAAA,EAAAA,IAAUG,GAFL,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdK,EAAiB,mCAAG,WAAM3B,GAAN,kFACzBoB,EADyB,gBACFpB,EADE,4BACyBkB,EADzB,4BAERD,EAAAA,EAAAA,IAAUG,GAFF,uBAEvBE,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Cast.jsx","service/api-movies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { fetchMovieCast, IMG_url } from '../service/api-movies';\nimport avatar from '../img/avatar.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { cast } = await fetchMovieCast(movieId);\n      setCast(cast);\n    };\n    getCast();\n  }, [movieId]);\n\n  // console.log(cast);\n\n  // useEffect(() => {\n  //   const getCast = async () => {\n  //     try {\n  //       const { cast } = await fetchMovieCast(movieId);\n  //       setCast(cast);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   getCast();\n  // }, [movieId]);\n\n  return (\n    <>\n      <h2>Cast</h2>\n      {cast.length === 0 ? (\n        <p>This movie is not found</p>\n      ) : (\n        <ul>\n          {cast.map(actor => {\n            return (\n              <li key={actor.cast_id}>\n                <img\n                  src={\n                    actor.profile_path\n                      ? IMG_url + 'w200' + actor.profile_path\n                      : avatar\n                  }\n                  width=\"200\"\n                  height=\"300\"\n                  alt={actor.name}\n                ></img>\n                <p> {actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '20c3d585cb9b647841132b61ed5a8cd8';\nexport const IMG_url = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchSearchMovies = async query => {\n  const queryString = `search/movie?query=${query}&api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\nexport const fetchMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const fetchMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchMovieCast","length","map","actor","src","profile_path","IMG_url","width","height","alt","name","character","cast_id","axios","KEY","fetchTrendingMovies","queryString","movies","data","fetchSearchMovies","query","fetchMovieDetails","movie","fetchMovieReviews"],"sourceRoot":""}